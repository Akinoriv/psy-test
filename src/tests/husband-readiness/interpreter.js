// src/tests/husband-readiness/interpreter.js
export default class HusbandReadinessInterpreter {
  constructor() {
    this.ranges = {
      perfect: {
        min: 300,
        level: 'perfect',
        label: '–ò–¥–µ–∞–ª—å–Ω—ã–π –º—É–∂–µ–Ω—ë–∫!',
        emoji: 'üíØ',
        color: '#4caf50',
        description: '–ú–æ–∂–Ω–æ —Å—Ä–∞–∑—É –∫ –ó–ê–ì–°—É –±–µ–∂–∞—Ç—å! –¢—ã –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∏–¥–µ–∞–ª–µ–Ω –¥–ª—è –º–µ–Ω—è!',
        probability: 99,
      },
      excellent: {
        min: 250,
        level: 'excellent',
        label: '–û—Ç–ª–∏—á–Ω—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç!',
        emoji: 'üíñ',
        color: '#8bc34a',
        description: '–ú–∞–º–∞ –±—É–¥–µ—Ç –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ! –£ –Ω–∞—Å –µ—Å—Ç—å –≤—Å–µ —à–∞–Ω—Å—ã –Ω–∞ —Å—á–∞—Å—Ç–ª–∏–≤—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è!',
        probability: 85,
      },
      good: {
        min: 200,
        level: 'good',
        label: '–•–æ—Ä–æ—à–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª!',
        emoji: 'üíï',
        color: '#ff9800',
        description: '–ï—Å—Ç—å –Ω–∞–¥ —á–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å, –Ω–æ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –æ—Ç–ª–∏—á–Ω—ã–µ! –ì–ª–∞–≤–Ω–æ–µ –∂–µ–ª–∞–Ω–∏–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è!',
        probability: 70,
      },
      mixed: {
        min: 150,
        level: 'mixed',
        label: '–ï—Å—Ç—å –∏ –ø–ª—é—Å—ã, –∏ –º–∏–Ω—É—Å—ã',
        emoji: 'ü§î',
        color: '#ff5722',
        description: '–ú–æ–∂–µ—Ç, —Å—Ç–æ–∏—Ç –ø–æ–¥—É–º–∞—Ç—å? –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–µ—â–∏ –º–æ–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å, –Ω–æ –Ω–µ –≤—Å–µ...',
        probability: 45,
      },
      challenging: {
        min: 100,
        level: 'challenging',
        label: '–ù—É–∂–Ω–æ —Å–∏–ª—å–Ω–æ –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è!',
        emoji: 'üòÖ',
        color: '#f44336',
        description: '–ò–ª–∏ –Ω–∞–π—Ç–∏ –∫–æ–≥–æ –ø–æ—Ö—É–∂–µ... –ù–æ –µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—á–µ—à—å - —Ä–∞–±–æ—Ç–∞–π –Ω–∞–¥ —Å–æ–±–æ–π!',
        probability: 25,
      },
      friends: {
        min: 50,
        level: 'friends',
        label: '–õ—É—á—à–µ –æ—Å—Ç–∞—Ç—å—Å—è –¥—Ä—É–∑—å—è–º–∏',
        emoji: 'üò¨',
        color: '#e91e63',
        description: '–°–µ—Ä—å—ë–∑–Ω–æ. –î—Ä—É–∂–±–∞ - —ç—Ç–æ —Ç–æ–∂–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ, –Ω–µ —Å—Ç–æ–∏—Ç –≤—Å—ë —É—Å–ª–æ–∂–Ω—è—Ç—å.',
        probability: 10,
      },
      runaway: {
        min: 0,
        level: 'runaway',
        label: 'RUN, FOREST, RUN!',
        emoji: 'üö©',
        color: '#d32f2f',
        description: '–≠—Ç–æ –∫—Ä–∞—Å–Ω—ã–µ —Ñ–ª–∞–≥–∏ —Ä–∞–∑–º–µ—Ä–æ–º —Å –ø–∞—Ä—É—Å! –ë–µ–≥–∏, –ø–æ–∫–∞ –º–æ–∂–µ—à—å!',
        probability: 1,
      },
    }

    this.recommendations = {
      perfect: [
        '–ü—Ä–æ–¥–æ–ª–∂–∞–π –±—ã—Ç—å —Ç–∞–∫–∏–º –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–º!',
        '–ü—Ä–µ–¥–ª–∞–≥–∞–π —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤–∏–¥–∞–Ω–∏—è',
        '–î—É–º–∞–π –æ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–º –±—É–¥—É—â–µ–º',
        '–ó–Ω–∞–∫–æ–º—å—Å—è —Å –º–æ–∏–º–∏ —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏',
      ],
      excellent: [
        '–†–∞–±–æ—Ç–∞–π –Ω–∞–¥ –º–µ–ª–∫–∏–º–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞–º–∏',
        '–ü—Ä–æ—è–≤–ª—è–π –±–æ–ª—å—à–µ –∑–∞–±–æ—Ç—ã –∏ –≤–Ω–∏–º–∞–Ω–∏—è',
        '–ü–ª–∞–Ω–∏—Ä—É–π —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
        '–ò–∑—É—á–∞–π –º–æ–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —É–≤–ª–µ—á–µ–Ω–∏—è',
      ],
      good: [
        '–†–∞–∑–≤–∏–≤–∞–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç',
        '–†–∞–±–æ—Ç–∞–π –Ω–∞–¥ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å—é –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö',
        '–ë–æ–ª—å—à–µ –æ–±—â–µ–Ω–∏—è –æ –ø–ª–∞–Ω–∞—Ö –Ω–∞ –±—É–¥—É—â–µ–µ',
        '–£—á–∞—Å—Ç–≤—É–π –≤ –º–æ–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö',
      ],
      mixed: [
        '–°–µ—Ä—å–µ–∑–Ω–æ –ø–æ–¥—É–º–∞–π –æ —Å–≤–æ–∏—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞—Ö',
        '–†–∞–±–æ—Ç–∞–π –Ω–∞–¥ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–º–∏ —á–µ—Ä—Ç–∞–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞',
        '–ë–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ —É–¥–µ–ª—è–π –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º',
        '–ü–æ–¥—É–º–∞–π –æ –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–º —Ä–æ—Å—Ç–µ',
      ],
      challenging: [
        '–ö–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–∏ —Å–≤–æ–π –ø–æ–¥—Ö–æ–¥ –∫ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º',
        '–†–∞–±–æ—Ç–∞–π —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º –Ω–∞–¥ –ª–∏—á–Ω—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏',
        '–†–∞–∑–≤–∏–≤–∞–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –∑—Ä–µ–ª–æ—Å—Ç—å',
        '–£—á–∏—Å—å –±—ã—Ç—å –Ω–∞–¥–µ–∂–Ω—ã–º –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º',
      ],
      friends: [
        '–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –Ω–∞ –¥—Ä—É–∂–±–µ, –æ–Ω–∞ —Ç–æ–∂–µ —Ü–µ–Ω–Ω–∞',
        '–†–∞–±–æ—Ç–∞–π –Ω–∞–¥ —Å–æ–±–æ–π –∫–∞–∫ –ª–∏—á–Ω–æ—Å—Ç—å—é',
        '–ù–∞–π–¥–∏ —Ç–æ–≥–æ, –∫—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç —Ç–µ–±–µ –±–æ–ª—å—à–µ',
        '–ù–µ –ø—Ä–∏–Ω–∏–º–∞–π —ç—Ç–æ –±–ª–∏–∑–∫–æ –∫ —Å–µ—Ä–¥—Ü—É',
      ],
      runaway: [
        '–°–µ—Ä—å–µ–∑–Ω–æ –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–∏ —Å–≤–æ—é –∂–∏–∑–Ω—å',
        '–û–±—Ä–∞—Ç–∏—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º –∑–∞ –ø–æ–º–æ—â—å—é',
        '–†–∞–±–æ—Ç–∞–π –Ω–∞–¥ –±–∞–∑–æ–≤—ã–º–∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–º–∏ –∫–∞—á–µ—Å—Ç–≤–∞–º–∏',
        '–í–æ–∑–º–æ–∂–Ω–æ, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—Ä–µ–º—è –Ω–∞ —Å–µ–±—è',
      ],
    }
  }

  interpret(score, requiredTraitsCount = 0, hasMinimumRequired = false) {
    console.log(`üíï Interpreting husband readiness score: ${score}`)

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    let range = this.ranges.runaway // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    for (const rangeKey of Object.keys(this.ranges)) {
      const rangeData = this.ranges[rangeKey]
      if (score >= rangeData.min) {
        range = rangeData
        break
      }
    }

    // –ï—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤, –ø–æ–Ω–∏–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (!hasMinimumRequired && range.level !== 'runaway') {
      console.log(`‚ö†Ô∏è Not enough required traits (${requiredTraitsCount}/6), downgrading result`)

      // –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ –±–æ–ª–µ–µ –Ω–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å
      const levels = ['perfect', 'excellent', 'good', 'mixed', 'challenging', 'friends', 'runaway']
      const currentIndex = levels.indexOf(range.level)
      const newIndex = Math.min(currentIndex + 2, levels.length - 1) // –ø–æ–Ω–∏–∂–∞–µ–º –Ω–∞ 2 —É—Ä–æ–≤–Ω—è
      const newLevel = levels[newIndex]
      range = this.ranges[newLevel]
    }

    const result = {
      score,
      level: range.level,
      label: range.label,
      emoji: range.emoji,
      color: range.color,
      description: range.description,
      probability: range.probability,
      range: { min: range.min, max: range.min + 49 }, // –ø—Ä–∏–º–µ—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω
      recommendations: this.recommendations[range.level] || [],
      requiredTraitsCount,
      hasMinimumRequired,
    }

    console.log(`üíï Result: ${range.emoji} ${range.label} (${range.probability}% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å)`)

    return result
  }

  generatePersonalizedNotes(score, selectedTraits, hasMinimumRequired) {
    console.log('üíå Generating personalized notes...')

    const notes = []

    // –ó–∞–º–µ—Ç–∫–∏ –ø–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–∞–º
    if (!hasMinimumRequired) {
      notes.push('‚ùó –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤ –¥–ª—è —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π')
    } else {
      notes.push('‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!')
    }

    // –ê–Ω–∞–ª–∏–∑ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤
    if (selectedTraits.positive) {
      const highValueTraits = selectedTraits.positive.filter((trait) => trait.weight >= 25)
      if (highValueTraits.length > 0) {
        notes.push(`üåü –û—Å–æ–±–µ–Ω–Ω–æ —Ü–µ–Ω–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞: ${highValueTraits.map((t) => t.label).join(', ')}`)
      }

      const requiredTraits = selectedTraits.positive.filter((trait) => trait.required)
      if (requiredTraits.length > 0) {
        notes.push(
          `‚≠ê –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞—á–µ—Å—Ç–≤–∞ –≤ –Ω–∞–ª–∏—á–∏–∏: ${requiredTraits.map((t) => t.label).join(', ')}`,
        )
      }
    }

    // –ê–Ω–∞–ª–∏–∑ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤
    if (selectedTraits.negative && selectedTraits.negative.length > 0) {
      const criticalNegatives = selectedTraits.negative.filter((trait) => trait.weight <= -40)
      if (criticalNegatives.length > 0) {
        notes.push(`üö© –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã: ${criticalNegatives.map((t) => t.label).join(', ')}`)
      }

      const minorNegatives = selectedTraits.negative.filter((trait) => trait.weight > -25)
      if (minorNegatives.length > 0) {
        notes.push(`‚ö†Ô∏è –ú–µ–ª–∫–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏: ${minorNegatives.map((t) => t.label).join(', ')}`)
      }
    } else {
      notes.push('üòá –ù–∏–∫–∞–∫–∏—Ö –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤ –Ω–µ –≤—ã—è–≤–ª–µ–Ω–æ (–∏–ª–∏ —Å–∫—Ä—ã–≤–∞–µ—à—å?)')
    }

    // –û–±—â–∏–π —Å–æ–≤–µ—Ç –ø–æ –±–∞–ª–ª–∞–º
    if (score >= 250) {
      notes.push('üíç –ì–æ—Ç–æ–≤ –∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é —Ä—É–∫–∏ –∏ —Å–µ—Ä–¥—Ü–∞!')
    } else if (score >= 150) {
      notes.push('üí™ –ï—Å—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª, –ø—Ä–æ–¥–æ–ª–∂–∞–π —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —Å–æ–±–æ–π!')
    } else if (score >= 50) {
      notes.push('ü§ù –ú–æ–∂–µ—Ç, –Ω–∞—á–Ω–µ–º —Å –¥—Ä—É–∂–±—ã?')
    } else {
      notes.push('üèÉ‚Äç‚ôÇÔ∏è –í—Ä–µ–º—è –ø–æ–¥—É–º–∞—Ç—å –æ —Å–º–µ–Ω–µ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –∫—É—Ä—Å–∞...')
    }

    console.log(`üíå Generated ${notes.length} personalized notes`)

    return notes
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–±–∞–≤–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  getFunnyComment(level) {
    const comments = {
      perfect: [
        '–ú–∞–º–∞, —è –≤—ã—Ö–æ–∂—É –∑–∞–º—É–∂! üíí',
        '–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ –¥–æ—Å—Ç–æ–π–Ω—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç!',
        '–ì–¥–µ —Ç—ã –±—ã–ª –≤—Å—é –º–æ—é –∂–∏–∑–Ω—å?! üòç',
      ],
      excellent: [
        '–ü–æ—á—Ç–∏ –∏–¥–µ–∞–ª—å–Ω–æ! –û—Å—Ç–∞–ª–æ—Å—å —á—É—Ç—å-—á—É—Ç—å –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —Å–æ–±–æ–π üí™',
        '–ú–æ–∏ –ø–æ–¥—Ä—É–≥–∏ –±—É–¥—É—Ç –∑–∞–≤–∏–¥–æ–≤–∞—Ç—å! üòè',
        '–ö–∞–∂–µ—Ç—Å—è, —è –Ω–∞—à–ª–∞ —Å–≤–æ–µ–≥–æ –ø—Ä–∏–Ω—Ü–∞! üëë',
      ],
      good: [
        '–ù–µ–ø–ª–æ—Ö–æ, –Ω–µ–ø–ª–æ—Ö–æ... –ü–æ—Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –¥–∞–ª—å—à–µ ü§®',
        '–ï—Å—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª, –Ω–æ –Ω—É–∂–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è! üìà',
        '–ú–æ–∂–µ—Ç –±—ã—Ç—å... –µ—Å–ª–∏ –æ—á–µ–Ω—å –ø–æ—Å—Ç–∞—Ä–∞–µ—à—å—Å—è ü§î',
      ],
      mixed: [
        '–•–º... 50 –Ω–∞ 50. –ö–∞–∫ –ø–æ–≤–µ–∑–µ—Ç! üé∞',
        '–¢–æ –≥—É—Å—Ç–æ, —Ç–æ –ø—É—Å—Ç–æ... –ù–µ–ø–æ–Ω—è—Ç–Ω–æ —Å —Ç–æ–±–æ–π ü§∑‚Äç‚ôÄÔ∏è',
        '–°–ª–æ–∂–Ω—ã–π —Å–ª—É—á–∞–π, –Ω–∞–¥–æ –ø–æ–¥—É–º–∞—Ç—å üßê',
      ],
      challenging: [
        '–ù—É... –µ—Å–ª–∏ –¥—Ä—É–≥–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–µ—Ç... üòÖ',
        '–í–æ–∑–º–æ–∂–Ω–æ, –≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π –º—ã –ø–æ–¥—Ö–æ–¥–∏–º –¥—Ä—É–≥ –¥—Ä—É–≥—É üåå',
        '–ù–∞–¥–æ –∂–µ, –∫—Ç–æ-—Ç–æ –∏ —Ç–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É–º—É–¥—Ä–∏–ª—Å—è –ø–æ–ª—É—á–∏—Ç—å! üòÇ',
      ],
      friends: [
        '–î—Ä—É–∂–±–∞ - —ç—Ç–æ —Å–≤—è—Ç–æ–µ! –ù–µ –±—É–¥–µ–º –ø–æ—Ä—Ç–∏—Ç—å ü§ù',
        '–¢—ã —Ö–æ—Ä–æ—à–∏–π, –Ω–æ –Ω–µ –¥–ª—è –º–µ–Ω—è... üëã',
        '–õ—É—á—à–µ —Å–∏–Ω–∏—Ü–∞ –≤ —Ä—É–∫–∞—Ö, —á–µ–º –∂—É—Ä–∞–≤–ª—å –≤ –Ω–µ–±–µ! (—Ç—ã —Å–∏–Ω–∏—Ü–∞) üê¶',
      ],
      runaway: [
        '–ú–ê–ú–û–ß–ö–ò! –ß—Ç–æ —ç—Ç–æ –±—ã–ª–æ?! üò±',
        '–ö—Ç–æ-—Ç–æ –∑–¥–µ—Å—å —è–≤–Ω–æ —á—Ç–æ-—Ç–æ –ø—É—Ç–∞–µ—Ç... ü§Ø',
        '–¢–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–∞–∂–µ –æ–±—Å—É–∂–¥–∞—Ç—å –Ω–µ –±—É–¥–µ–º! üôà',
      ],
    }

    const levelComments = comments[level] || comments.runaway
    return levelComments[Math.floor(Math.random() * levelComments.length)]
  }
}
