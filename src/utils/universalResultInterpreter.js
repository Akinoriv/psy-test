// utils/universalResultInterpreter.js
// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä –¥–ª—è –ª—é–±—ã—Ö —Ç–µ—Å—Ç–æ–≤

export class UniversalResultInterpreter {
  /**
   * –°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –¥–ª—è –ª—é–±–æ–≥–æ —Ç–µ—Å—Ç–∞
   * @param {Object} testResult - —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞
   * @param {Object} testConfig - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
   * @returns {Object} –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   */
  static interpret(testResult, testConfig = null) {
    // –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
    if (testResult.interpretation) {
      return testResult.interpretation
    }

    const score = testResult.score
    const testId = testResult.testId
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ç–µ—Å—Ç–∞ –ø–æ ID –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    const testType = this.detectTestType(testId, testConfig, testResult)
    
    return this.createInterpretation(score, testType, testResult)
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —Ç–µ—Å—Ç–∞
   */
  static detectTestType(testId, testConfig, testResult) {
    // –ü–æ ID —Ç–µ—Å—Ç–∞
    if (testId?.includes('stress') || testId?.includes('burnout')) return 'stress'
    if (testId?.includes('readiness') || testId?.includes('compatibility')) return 'compatibility'
    if (testId?.includes('personality')) return 'personality'
    if (testId?.includes('depression')) return 'depression'
    if (testId?.includes('anxiety')) return 'anxiety'
    if (testId?.includes('iq')) return 'intelligence'
    
    // –ü–æ –Ω–∞–ª–∏—á–∏—é —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–µ–π
    if (testResult.selectedTraits || testResult.relationshipGoal) return 'compatibility'
    if (testResult.personalityTraits) return 'personality'
    
    // –ü–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É –±–∞–ª–ª–æ–≤
    if (score >= 0 && score <= 100) return 'percentage'
    if (score >= 0 && score <= 200) return 'scale'
    
    return 'generic'
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ —Ç–µ—Å—Ç–∞
   */
  static createInterpretation(score, testType, testResult) {
    switch (testType) {
      case 'stress':
        return this.interpretStress(score)
      case 'compatibility':
        return this.interpretCompatibility(score, testResult)
      case 'personality':
        return this.interpretPersonality(score, testResult)
      case 'depression':
        return this.interpretDepression(score)
      case 'anxiety':
        return this.interpretAnxiety(score)
      case 'intelligence':
        return this.interpretIntelligence(score)
      case 'percentage':
        return this.interpretPercentage(score)
      case 'scale':
        return this.interpretScale(score)
      default:
        return this.interpretGeneric(score)
    }
  }

  // –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ç–µ—Å—Ç–æ–≤
  static interpretStress(score) {
    if (score <= 12) {
      return {
        emoji: 'üòå',
        label: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞',
        description: '–í–∞—à —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–æ—Ä–º–µ. –í—ã —Ö–æ—Ä–æ—à–æ —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å —Å –∂–∏–∑–Ω–µ–Ω–Ω—ã–º–∏ –≤—ã–∑–æ–≤–∞–º–∏.',
        color: '#10b981'
      }
    } else if (score <= 25) {
      return {
        emoji: 'üòê',
        label: '–õ–µ–≥–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞',
        description: '–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ —Å—Ç—Ä–µ—Å—Å–∞, –Ω–æ –æ–Ω–∏ –ø–æ–∫–∞ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã.',
        color: '#f59e0b'
      }
    } else if (score <= 40) {
      return {
        emoji: 'üòü',
        label: '–£–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞',
        description: '–°—Ç—Ä–µ—Å—Å –Ω–∞—á–∏–Ω–∞–µ—Ç —Å–µ—Ä—å–µ–∑–Ω–æ –≤–ª–∏—è—Ç—å –Ω–∞ –≤–∞—à—É –∂–∏–∑–Ω—å. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏–Ω—è—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –º–µ—Ä—ã.',
        color: '#ea580c'
      }
    } else if (score <= 55) {
      return {
        emoji: 'üò∞',
        label: '–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞',
        description: '–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ç—Ä–µ—Å—Å–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–µ–±—É–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è.',
        color: '#dc2626'
      }
    } else {
      return {
        emoji: 'üö®',
        label: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞',
        description: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞. –ù–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.',
        color: '#991b1b'
      }
    }
  }

  static interpretCompatibility(score, testResult) {
    if (score >= 80) {
      return {
        emoji: 'üíï',
        label: '–û—Ç–ª–∏—á–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å!',
        description: '–£ –≤–∞—Å –µ—Å—Ç—å –≤—Å–µ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–ª—è –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π.',
        color: '#10b981',
        probability: Math.min(95, score)
      }
    } else if (score >= 60) {
      return {
        emoji: 'üòä',
        label: '–•–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã',
        description: '–ï—Å—Ç—å —Ö–æ—Ä–æ—à–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π.',
        color: '#f59e0b',
        probability: Math.min(75, score)
      }
    } else if (score >= 40) {
      return {
        emoji: 'ü§î',
        label: '–ù—É–∂–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —Å–æ–±–æ–π',
        description: '–£ –≤–∞—Å –µ—Å—Ç—å —Ö–æ—Ä–æ—à–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞, –Ω–æ —Å—Ç–æ–∏—Ç –±–æ–ª—å—à–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è.',
        color: '#ea580c',
        probability: Math.min(50, score)
      }
    } else {
      return {
        emoji: 'üòÖ',
        label: '–ü–æ–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤',
        description: '–°—Ç–æ–∏—Ç –µ—â–µ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —Å–æ–±–æ–π –ø–µ—Ä–µ–¥ —Å–µ—Ä—å–µ–∑–Ω—ã–º–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏.',
        color: '#dc2626',
        probability: Math.min(30, score)
      }
    }
  }

  static interpretPersonality(score, testResult) {
    return {
      emoji: 'üé≠',
      label: '–ê–Ω–∞–ª–∏–∑ –ª–∏—á–Ω–æ—Å—Ç–∏',
      description: '–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Ä–∞–∂–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏.',
      color: '#6366f1'
    }
  }

  static interpretDepression(score) {
    if (score <= 10) {
      return {
        emoji: 'üòä',
        label: '–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ',
        description: '–ü—Ä–∏–∑–Ω–∞–∫–æ–≤ –¥–µ–ø—Ä–µ—Å—Å–∏–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.',
        color: '#10b981'
      }
    } else if (score <= 20) {
      return {
        emoji: 'üòî',
        label: '–õ–µ–≥–∫–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è',
        description: '–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∏–º–ø—Ç–æ–º—ã –¥–µ–ø—Ä–µ—Å—Å–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç.',
        color: '#f59e0b'
      }
    } else {
      return {
        emoji: 'üòû',
        label: '–í—ã—Ä–∞–∂–µ–Ω–Ω–∞—è –¥–µ–ø—Ä–µ—Å—Å–∏—è',
        description: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.',
        color: '#dc2626'
      }
    }
  }

  static interpretAnxiety(score) {
    if (score <= 15) {
      return {
        emoji: 'üòå',
        label: '–ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏',
        description: '–í–∞—à —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã.',
        color: '#10b981'
      }
    } else if (score <= 30) {
      return {
        emoji: 'üò∞',
        label: '–£–º–µ—Ä–µ–Ω–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å',
        description: '–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–π —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏.',
        color: '#f59e0b'
      }
    } else {
      return {
        emoji: 'üò®',
        label: '–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç–∏',
        description: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é.',
        color: '#dc2626'
      }
    }
  }

  static interpretIntelligence(score) {
    if (score >= 130) {
      return {
        emoji: 'üß†',
        label: '–í—ã—Å–æ–∫–∏–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç',
        description: '–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ.',
        color: '#6366f1'
      }
    } else if (score >= 115) {
      return {
        emoji: 'ü§ì',
        label: '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ',
        description: '–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è.',
        color: '#10b981'
      }
    } else if (score >= 85) {
      return {
        emoji: 'üòä',
        label: '–°—Ä–µ–¥–Ω–∏–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç',
        description: '–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ä–µ–¥–Ω–µ–º—É —É—Ä–æ–≤–Ω—é.',
        color: '#f59e0b'
      }
    } else {
      return {
        emoji: 'ü§î',
        label: '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ',
        description: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–∑–≤–∏–≤–∞—Ç—å –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.',
        color: '#ea580c'
      }
    }
  }

  static interpretPercentage(score) {
    if (score >= 80) {
      return {
        emoji: 'üéâ',
        label: '–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!',
        description: '–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ.',
        color: '#10b981'
      }
    } else if (score >= 60) {
      return {
        emoji: 'üëç',
        label: '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
        description: '–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è.',
        color: '#f59e0b'
      }
    } else if (score >= 40) {
      return {
        emoji: 'üëå',
        label: '–°—Ä–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
        description: '–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ä–µ–¥–Ω–µ–º—É —É—Ä–æ–≤–Ω—é.',
        color: '#ea580c'
      }
    } else {
      return {
        emoji: 'üí™',
        label: '–ï—Å—Ç—å –Ω–∞–¥ —á–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å',
        description: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–¥–µ–ª–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–≤–∏—Ç–∏—é.',
        color: '#dc2626'
      }
    }
  }

  static interpretScale(score) {
    const percentage = Math.round((score / 200) * 100)
    return this.interpretPercentage(percentage)
  }

  static interpretGeneric(score) {
    return {
      emoji: 'üìä',
      label: '–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω',
      description: '–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.',
      color: '#6366f1'
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
   */
  static generateRecommendations(testResult, testType) {
    if (testResult.recommendations) {
      return testResult.recommendations
    }

    switch (testType) {
      case 'stress':
        return this.getStressRecommendations(testResult.score)
      case 'compatibility':
        return this.getCompatibilityRecommendations(testResult)
      case 'depression':
        return this.getDepressionRecommendations(testResult.score)
      default:
        return []
    }
  }

  static getStressRecommendations(score) {
    if (score <= 12) {
      return [
        '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∑–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏',
        '–†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ —Å—Ç—Ä–µ—Å—Å–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏',
        '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏'
      ]
    } else if (score <= 25) {
      return [
        '–ò–∑—É—á–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏ (–¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, –º–µ–¥–∏—Ç–∞—Ü–∏—è)',
        '–£–ª—É—á—à–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞ - –ª–æ–∂–∏—Ç–µ—Å—å —Å–ø–∞—Ç—å –≤ –æ–¥–Ω–æ –≤—Ä–µ–º—è',
        '–î–æ–±–∞–≤—å—Ç–µ –≤ —Ä–∞—Å–ø–æ—Ä—è–¥–æ–∫ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è'
      ]
    } else if (score <= 40) {
      return [
        '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏',
        '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫ –±–ª–∏–∑–∫–∏–º –ª—é–¥—è–º',
        '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º'
      ]
    } else {
      return [
        '–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É',
        '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏',
        '–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤—Å—é –¥–æ—Å—Ç—É–ø–Ω—É—é —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É'
      ]
    }
  }

  static getCompatibilityRecommendations(testResult) {
    const recommendations = []
    
    if (testResult.score < 60) {
      recommendations.push('–†–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–¥ —Ä–∞–∑–≤–∏—Ç–∏–µ–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞')
      recommendations.push('–£–ª—É—á—à–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏')
    }
    
    if (testResult.selectedTraits?.length < 5) {
      recommendations.push('–†–∞–∑–≤–∏–≤–∞–π—Ç–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ')
    }
    
    recommendations.push('–ü–æ–º–Ω–∏—Ç–µ: –≤–∞–∂–Ω–æ –±—ã—Ç—å —Å–æ–±–æ–π –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö')
    
    return recommendations
  }

  static getDepressionRecommendations(score) {
    if (score <= 10) {
      return ['–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Ç–µ–∫—É—â–∏–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏']
    } else if (score <= 20) {
      return [
        '–£–¥–µ–ª–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
        '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏',
        '–°–æ–±–ª—é–¥–∞–π—Ç–µ —Ä–µ–∂–∏–º —Å–Ω–∞'
      ]
    } else {
      return [
        '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Å–∏—Ö–æ–ª–æ–≥—É –∏–ª–∏ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç—É',
        '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≥—Ä—É–ø–ø–æ–≤–æ–π —Ç–µ—Ä–∞–ø–∏–∏',
        '–ù–µ –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –Ω–∞–µ–¥–∏–Ω–µ —Å–æ —Å–≤–æ–∏–º–∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è–º–∏'
      ]
    }
  }
}